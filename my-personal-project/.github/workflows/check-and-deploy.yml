name: Check Benchmarks & Deploy
on:
  push:
  workflow_dispatch:
    inputs:
      deploy_trigger_source:
        default: "github"
jobs:
  check-benchmarks:
    name: Check www Benchmarks
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./"
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 21.1.0
          cache: "yarn"
          cache-dependency-path: www/yarn.lock

      - name: Install Dependencies
        run: yarn install

      - name: Run Linter
        id: run_linter
        run: yarn lint

      - name: Check Type Correctness
        id: check_type_correctness
        run: yarn check-types

      - name: Check Formatting
        id: check_formatting
        run: yarn check-prettier

  deploy_preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [check-benchmarks]
    if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/production'
    permissions:
      contents: write
      pull-requests: write
    outputs:
      preview-url: ${{ steps.vercel.outputs.preview-url }}
    defaults:
      run:
        working-directory: "./"
    steps:
      - uses: actions/checkout@v3
      - uses: amondnet/vercel-action@v25
        id: vercel
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          scope: ${{ secrets.VERCEL_ORG_ID }}

  audit_with_lighthouse:
    name: Audit with Lighthouse
    runs-on: ubuntu-latest
    needs: [deploy_www_preview]
    if: github.ref != 'refs/head/main' && github.ref != 'ref/head/production'
    permissions:
      contents: write
      pull-requests: write
    defaults:
      run:
        working-directory: "./"
    steps:
      - uses: actions/checkout@v4

      - name: Audit preview URL with Lighthouse (mobile)
        id: lighthouse_audit_mobile
        uses: treosh/lighthouse-ci-action@v9
        with:
          urls: |
            ${{ needs.deploy_preview.outputs.preview-url }}
          uploadArtifacts: true
          temporaryPublicStorage: true
          configPath: .github/lighthouse/lighthouse-config.mobile.json

      - name: Audit preview URL with Lighthouse (desktop)
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@v9
        with:
          urls: |
            ${{ needs.deploy_preview.outputs.preview-url }}
          uploadArtifacts: true
          temporaryPublicStorage: true
          configPath: .github/lighthouse/lighthouse-config.desktop.json

      - name: Format Lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const mobileLinks = ${{ steps.lighthouse_audit_mobile.outputs.links }};
            const mobileResult = ${{ steps.lighthouse_audit_mobile.outputs.manifest }}[0].summary;
            const desktopLinks = ${{ steps.lighthouse_audit.outputs.links }};
            const desktopResult = ${{ steps.lighthouse_audit.outputs.manifest }}[0].summary;
            const previewUrl = "${{ needs.deploy_preview.outputs.preview-url }}";
            const formatResult = (res) => Math.round((res * 100));
            const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥';
            Object.keys(mobileResult).forEach(key => mobileResult[key] = formatResult(mobileResult[key]));
            Object.keys(desktopResult).forEach(key => desktopResult[key] = formatResult(desktopResult[key]));
            const comment = [
              `## ‚ö°Ô∏è Lighthouse Report`,
              `### Mobile ([view report](${Object.values(mobileLinks)[0]}))`,
              '| Category | Score |',
              '| --- | --- |',
              `| ${score(mobileResult.performance)} Performance | ${mobileResult.performance} |`,
              `| ${score(mobileResult.accessibility)} Accessibility | ${mobileResult.accessibility} |`,
              `| ${score(mobileResult['best-practices'])} Best practices | ${mobileResult['best-practices']} |`,
              `| ${score(mobileResult.seo)} SEO | ${mobileResult.seo} |`,
              ` `,
              `### Desktop ([view report](${Object.values(desktopLinks)[0]}))`,
              '| Category | Score |',
              '| --- | --- |',
              `| ${score(desktopResult.performance)} Performance | ${desktopResult.performance} |`,
              `| ${score(desktopResult.accessibility)} Accessibility | ${desktopResult.accessibility} |`,
              `| ${score(desktopResult['best-practices'])} Best practices | ${desktopResult['best-practices']} |`,
              `| ${score(desktopResult.seo)} SEO | ${desktopResult.seo} |`,
              ` `,
              `*Lighthouse ran on [${previewUrl}](${previewUrl})*`
            ].join('\n');
            core.setOutput("comment", comment);
      - name: Add comment to PR
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            ${{ steps.format_lighthouse_score.outputs.comment }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: "github-actions[bot]" # The user.login for temporary GitHub tokens
          allow-repeats: false # This is the default

  deploy_staging:
    name: Deploy Staging
    runs-on: ubuntu-latest
    needs: [check-www-benchmarks]
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: "./"
    steps:
      - uses: actions/checkout@v3
      - uses: amondnet/vercel-action@v25
        id: vercel
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          scope: ${{ secrets.VERCEL_ORG_ID }}
          alias-domains: my-personal-project-six.vercel.app
          github-comment: false

  deploy-production:
    name: Deploy Production
    if: github.ref == 'refs/heads/production'
    needs: check-benchmarks
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./"
    steps:
      - uses: actions/checkout@v3
      - uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          scope: ${{ secrets.VERCEL_ORG_ID }}
          # alias-domains: www.presq.studio
          vercel-args: --prod
          github-comment: false
